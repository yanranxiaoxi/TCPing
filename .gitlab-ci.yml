stages:
  - test
  - build
  - upload
  - release

variables:
  PACKAGE_VERSION: "1.2.0"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/TCPing/${PACKAGE_VERSION}"

#########################
#         Test          #
#########################

test-ping:
  stage: test
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - go run ./main.go soraharu.com 443
    - go run ./main.go http://soraharu.com
    - go run ./main.go https://soraharu.com

#########################
#         Build         #
#########################

# ------ Windows ------ #

windows-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

windows-i386:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

windows-arm64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

# ------- MacOS ------- #

darwin-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=darwin GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

darwin-arm64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=darwin GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# -- Linux X86/AMD64 -- #

linux-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-i386:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ----- Linux ARM ----- #

linux-arm64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-armv5:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm GOARM=5 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-armv6:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm GOARM=6 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-armv7:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm GOARM=7 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - Linux MIPS/MIPSLE - #

linux-mips:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mips GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-mips64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mips64 GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-mipsle:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-mips64le:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mips64le GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - Linux LoongArch - #

linux-loong64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=loong64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - Linux PPC - #

linux-ppc64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=ppc64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-ppc64le:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=ppc64le go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - Linux RISC-V - #

linux-riscv64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=riscv64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - FreeBSD X86/AMD64 - #

freebsd-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

freebsd-i386:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- FreeBSD ARM ---- #

freebsd-arm64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

freebsd-armv6:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=arm GOARM=6 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

freebsd-armv7:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=arm GOARM=7 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- FreeBSD RISC-V ---- #

freebsd-riscv64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=riscv64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- DragonFly ---- #

dragonfly-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=dragonfly GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- AIX ---- #

aix-ppc64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=aix GOARCH=ppc64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- illumos ---- #

illumos-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=illumos GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- Solaris ---- #

solaris-amd64:
  stage: build
  tags:
    - linux
    - docker
  image: docker.io/library/golang:1.21-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=solaris GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

#########################
#        Upload         #
#########################

upload:
  stage: upload
  tags:
    - linux
    - docker
  image: docker.io/curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/windows-amd64/tcping.exe ${PACKAGE_REGISTRY_URL}/windows-amd64/tcping.exe
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/windows-i386/tcping.exe ${PACKAGE_REGISTRY_URL}/windows-i386/tcping.exe
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/windows-arm64/tcping.exe ${PACKAGE_REGISTRY_URL}/windows-arm64/tcping.exe
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/darwin-amd64/tcping ${PACKAGE_REGISTRY_URL}/darwin-amd64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/darwin-arm64/tcping ${PACKAGE_REGISTRY_URL}/darwin-arm64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-amd64/tcping ${PACKAGE_REGISTRY_URL}/linux-amd64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-i386/tcping ${PACKAGE_REGISTRY_URL}/linux-i386/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-arm64/tcping ${PACKAGE_REGISTRY_URL}/linux-arm64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-armv5/tcping ${PACKAGE_REGISTRY_URL}/linux-armv5/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-armv6/tcping ${PACKAGE_REGISTRY_URL}/linux-armv6/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-armv7/tcping ${PACKAGE_REGISTRY_URL}/linux-armv7/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-mips/tcping ${PACKAGE_REGISTRY_URL}/linux-mips/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-mips64/tcping ${PACKAGE_REGISTRY_URL}/linux-mips64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-mipsle/tcping ${PACKAGE_REGISTRY_URL}/linux-mipsle/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-mips64le/tcping ${PACKAGE_REGISTRY_URL}/linux-mips64le/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-loong64/tcping ${PACKAGE_REGISTRY_URL}/linux-loong64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-ppc64/tcping ${PACKAGE_REGISTRY_URL}/linux-ppc64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-ppc64le/tcping ${PACKAGE_REGISTRY_URL}/linux-ppc64le/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/linux-riscv64/tcping ${PACKAGE_REGISTRY_URL}/linux-riscv64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-amd64/tcping ${PACKAGE_REGISTRY_URL}/freebsd-amd64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-i386/tcping ${PACKAGE_REGISTRY_URL}/freebsd-i386/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-arm64/tcping ${PACKAGE_REGISTRY_URL}/freebsd-arm64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-armv6/tcping ${PACKAGE_REGISTRY_URL}/freebsd-armv6/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-armv7/tcping ${PACKAGE_REGISTRY_URL}/freebsd-armv7/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/freebsd-riscv64/tcping ${PACKAGE_REGISTRY_URL}/freebsd-riscv64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/dragonfly-amd64/tcping ${PACKAGE_REGISTRY_URL}/dragonfly-amd64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/aix-ppc64/tcping ${PACKAGE_REGISTRY_URL}/aix-ppc64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/illumos-amd64/tcping ${PACKAGE_REGISTRY_URL}/illumos-amd64/tcping
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./artifacts/solaris-amd64/tcping ${PACKAGE_REGISTRY_URL}/solaris-amd64/tcping

#########################
#        Release        #
#########################

release:
  stage: release
  tags:
    - linux
    - docker
    - amd64
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  dependencies: []
  script:
    - |
      release-cli create --name "Release $PACKAGE_VERSION" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"tcping.exe (windows-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/windows-amd64/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping.exe (windows-i386)\",\"url\":\"${PACKAGE_REGISTRY_URL}/windows-i386/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping.exe (windows-arm64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/windows-arm64/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (darwin-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/darwin-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (darwin-arm64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/darwin-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-i386)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-i386/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-arm64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-armv5)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-armv5/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-armv6)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-armv6/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-armv7)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-armv7/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mips)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-mips/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mips64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-mips64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mipsle)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-mipsle/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mips64le)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-mips64le/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-loong64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-loong64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-ppc64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-ppc64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-ppc64le)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-ppc64le/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-riscv64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/linux-riscv64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-i386)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-i386/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-arm64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-armv6)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-armv6/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-armv7)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-armv7/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-riscv64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/freebsd-riscv64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (dragonfly-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/dragonfly-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (aix-ppc64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/aix-ppc64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (illumos-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/illumos-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (solaris-amd64)\",\"url\":\"${PACKAGE_REGISTRY_URL}/solaris-amd64/tcping\",\"link_type\":\"package\"}"
