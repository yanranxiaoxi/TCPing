stages:
  - test
  - build
  - upload
  - release

#########################
#         Test          #
#########################

test-ping:
  stage: test
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - go run ./main.go soraharu.com 443
    - go run ./main.go -H soraharu.com
    - go run ./main.go https://soraharu.com

#########################
#         Build         #
#########################

# ------ Windows ------ #

windows-amd64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

windows-i386:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

windows-arm64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=windows GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping.exe ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping.exe
  rules:
    - if: $CI_COMMIT_TAG

# ------- MacOS ------- #

darwin-amd64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=darwin GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

darwin-arm64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=darwin GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# -- Linux X86/AMD64 -- #

linux-amd64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-i386:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ----- Linux ARM ----- #

linux-arm64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-arm:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=arm GOARM=6 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - Linux MIPS/MIPSLE - #

linux-mips:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mips GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

linux-mipsle:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# - FreeBSD X86/AMD64 - #

freebsd-amd64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=amd64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

freebsd-i386:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=386 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

# ---- FreeBSD ARM ---- #

freebsd-arm64:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=arm64 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

freebsd-arm:
  stage: build
  tags:
    - linuxdocker
  image: golang:1.18-alpine
  script:
    - mkdir ./artifacts/
    - mkdir ./artifacts/$CI_JOB_NAME/
    - GOOS=freebsd GOARCH=arm GOARM=6 go build -o ./artifacts/$CI_JOB_NAME/tcping ./main.go
  artifacts:
    name: "tcping-$CI_JOB_NAME-$CI_COMMIT_TAG"
    paths:
      - ./artifacts/$CI_JOB_NAME/tcping
  rules:
    - if: $CI_COMMIT_TAG

#########################
#        Upload         #
#########################

upload:
  stage: upload
  tags:
    - windows10shell
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - Set-Location "D:\Website\wwwroot\downloadserver.soraharu.com\TCPing\";
    - if (Test-Path ".\${CI_COMMIT_TAG}\") {
        Remove-Item ".\${CI_COMMIT_TAG}\" -Recurse;
      }
    - New-Item -Path ".\${CI_COMMIT_TAG}\" -ItemType Directory;
    - Set-Location ".\${CI_COMMIT_TAG}\";
    - ${releaseNameArray} =
        ”windows-amd64”, “windows-i386”, ”windows-arm64”,
        ”darwin-amd64”, ”darwin-arm64”,
        ”linux-amd64”, ”linux-i386”,
        ”linux-arm64”, ”linux-arm”,
        ”linux-mips”, ”linux-mipsle”,
        ”freebsd-amd64”, ”freebsd-i386”,
        ”freebsd-arm64”, ”freebsd-arm”;
    - foreach (${releaseName} in ${releaseNameArray}) {
        New-Item -Path ".\${releaseName}\" -ItemType Directory;
        Move-Item "${CI_PROJECT_DIR}\artifacts\${releaseName}\*" ".\${releaseName}\";
      }

#########################
#        Release        #
#########################

release:
  stage: release
  tags:
    - linuxdocker
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  dependencies: []
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"tcping.exe (windows-amd64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/windows-amd64/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping.exe (windows-i386)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/windows-i386/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping.exe (windows-arm64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/windows-arm64/tcping.exe\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (darwin-amd64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/darwin-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (darwin-arm64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/darwin-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-amd64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-i386)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-i386/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-arm64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-arm)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-arm/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mips)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-mips/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (linux-mipsle)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/linux-mipsle/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-amd64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/freebsd-amd64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-i386)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/freebsd-i386/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-arm64)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/freebsd-arm64/tcping\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"tcping (freebsd-arm)\",\"url\":\"https://downloadserver.soraharu.com:7000/TCPing/${CI_COMMIT_TAG}/freebsd-arm/tcping\",\"link_type\":\"package\"}"
